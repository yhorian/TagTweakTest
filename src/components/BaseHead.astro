---
// Import the global.css file here so that it is included on
// all pages through the use of the <BaseHead /> component.
import '../styles/global.css';

interface Props {
	title: string;
	description: string;
	image?: string;
}

const canonicalURL = new URL(Astro.url.pathname, Astro.site);

const { title, description, image = '/blog-placeholder-1.jpg' } = Astro.props;
---

<!-- Global Metadata -->
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
<meta name="generator" content={Astro.generator} />

<!-- Font preloads -->
<link rel="preload" href="/fonts/atkinson-regular.woff" as="font" type="font/woff" crossorigin />
<link rel="preload" href="/fonts/atkinson-bold.woff" as="font" type="font/woff" crossorigin />

<!-- Canonical URL -->
<link rel="canonical" href={canonicalURL} />

<!-- Primary Meta Tags -->
<title>{title}</title>
<meta name="title" content={title} />
<meta name="description" content={description} />

<!-- Open Graph / Facebook -->
<meta property="og:type" content="website" />
<meta property="og:url" content={Astro.url} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:image" content={new URL(image, Astro.url)} />

<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={Astro.url} />
<meta property="twitter:title" content={title} />
<meta property="twitter:description" content={description} />
<meta property="twitter:image" content={new URL(image, Astro.url)} />
<style>
	main {
	  width: calc(100% - 2em);
	  max-width: 100%;
	  margin: 0;
	}
	.hero-image {
	  width: 100%;
	}
	.hero-image img {
	  display: block;
	  margin: 0 auto;
	  border-radius: 12px;
	  box-shadow: var(--box-shadow);
	}
	.prose {
	  width: 720px;
	  max-width: calc(100% - 2em);
	  margin: auto;
	  padding: 1em;
	  color: rgb(var(--gray-dark));
	}
	.title {
	  margin-bottom: 1em;
	  padding: 1em 0;
	  text-align: center;
	  line-height: 1;
	}
	.title h1 {
	  margin: 0 0 0.5em 0;
	}
	.date {
	  margin-bottom: 0.5em;
	  color: rgb(var(--gray));
	}
	.last-updated-on {
	  font-style: italic;
	}
	/* Global CSS. Tailwind directives go here. */
	@tailwind base;
	@tailwind components;
	@tailwind utilities;

	@layer utilities {
	  h1 {
		@apply text-4xl font-bold;
	  }

	  h2 {
		@apply text-3xl font-bold;
	  }

	  h3 {
		@apply text-2xl font-bold;
	  }

	  h4 {
		@apply text-xl font-medium;
	  }

	  h5 {
		@apply text-lg font-medium;
	  }

	  h6 {
		@apply text-base font-medium;
	  }
	}

	@layer components {
	  .content-grid {
		--padding-inline: 6rem;
		--content-max-width: 900px;
		--breakout-max-width: 1200px;

		--breakout-size: calc(
		  (var(--breakout-max-width) - var(--content-max-width)) / 2
		);
		display: grid;
		grid-template-columns:
		  [full-width-start] minmax(var(--padding-inline), 1fr)
		  [breakout-start] minmax(0, var(--breakout-size))
		  [content-start] min(
			100% - (var(--padding-inline) * 2),
			var(--content-max-width)
		  )
		  [content-end]
		  minmax(0, var(--breakout-size)) [breakout-end]
		  minmax(var(--padding-inline), 1fr) [full-width-end];
	  }

	  @media (max-width: 640px) {
		.content-grid {
		  --padding-inline: 3rem;
		}
	  }
	  
	  .content-grid > :not(.breakout, .full-width),
	  .full-width > :not(.breakout, .full-width) {
		grid-column: content;
	  }

	  .content-grid > .breakout {
		@apply bg-blue-500;
		grid-column: breakout;
	  }

	  .content-grid > .full-width {
		@apply bg-blue-800;
		grid-column: full-width;
		display: grid;
		grid-template-columns: inherit;
	  }

	  img.full-width {
		width: 100%;
		max-height: 45vh;
		object-fit: cover;
	  }

	  .flow > * + * {
		margin-top: var(--flow-spacing, 1em);
	  }

	  .body-bg {
		@apply text-zinc-700;
	  }

	  .dark-body-bg {
		@apply text-white;
		text-shadow: 0 0 2px;
	  }

	  a:active,
	  active:active {
		@apply brightness-110;
		@apply backdrop-brightness-110;
		@apply text-opacity-50;
	  }
	}
  </style>